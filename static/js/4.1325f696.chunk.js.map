{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/ava.jpg","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","src","logo","to","name","Message","status","whoSays","I","friend","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messageElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","compose","connect","withAuthRedirect"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,EAAI,mBAAmB,OAAS,0B,2ECD5N,MAA0B,gC,OCiB1BC,MAbf,SAAqBC,GACpB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,sBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,UACC,qBAAKC,IAAKC,IACV,8BACC,cAAC,IAAD,CAASC,GAAIR,EAAb,SAAoBD,EAAMU,aCIhBC,MAbf,SAAkBX,GACjB,IAAIY,EAMJ,OAJCA,EADkB,KAAfZ,EAAMa,QACAT,IAAEU,EAEFV,IAAEW,OAGX,qBAAKZ,UAAS,UAAKC,IAAEY,QAAP,YAAkBJ,GAAhC,SAA2CZ,EAAMgB,W,iCCqBnD,IAAIC,EAAcC,YAAiB,IAkB7BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAhBL,SAACpB,GACpB,OACI,uBAAMsB,SAAUtB,EAAMuB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBY,YAAa,qBAC5BnB,KAAK,qBAED,8BACI,kDAQDoB,EA3Cf,SAAiB9B,GACb,IAAI+B,EAAQ/B,EAAMgC,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAY1B,KAAM0B,EAAE1B,KAAiBR,GAAIkC,EAAElC,IAAZkC,EAAElC,OAC1EmC,EAAkBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASH,QAAS0B,EAAE1B,SAAc0B,EAAErC,OAMtG,OACI,sBAAKC,UAAWC,IAAE8B,QAAlB,UACI,qBAAK/B,UAAWC,IAAEoC,aAAlB,SACKP,IAEL,sBAAK9B,UAAWC,IAAEkC,SAAlB,UACI,8BAAMD,IACN,cAAClB,EAAD,CAAqBG,SAXb,SAACmB,GACjBzC,EAAM0C,YAAYD,EAAOE,0B,iCCFlBC,sBACdC,aAPqB,SAACd,GACtB,MAAO,CACNC,YAAaD,EAAMC,eAKK,CAACU,kBAC1BI,IAFcF,CAGbd","file":"static/js/4.1325f696.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1RVPc\",\"dialogsItems\":\"Dialogs_dialogsItems__2Os3X\",\"active\":\"Dialogs_active__1SdL4\",\"messages\":\"Dialogs_messages__uBiiS\",\"message\":\"Dialogs_message__1bpJG\",\"I\":\"Dialogs_I__3E80m\",\"friend\":\"Dialogs_friend__12YEC\"};","export default __webpack_public_path__ + \"static/media/ava.592fda01.jpg\";","import s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from './ava.jpg'\r\n\r\nfunction DialogItem (props) {\r\n\tlet path = '/dialogs/' + props.id;\r\n\t\r\n\treturn (\r\n\t\t\t<div className={s.dialog + ' ' + s.active}>\r\n\t\t\t\t<img src={logo}/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<NavLink to={path}>{props.name}</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DialogItem;","import s from './../Dialogs.module.css'\r\n\r\nfunction Message (props) {\r\n\tlet status;\r\n\tif (props.whoSays=='I'){\r\n\t\tstatus = s.I;\r\n\t} else{\r\n\t\tstatus = s.friend;\r\n\t}\r\n\treturn (\r\n\t\t<div className={`${s.message} ${status}`}>{props.message}</div>\r\n\r\n\t)\r\n}\r\n\r\nexport default Message;","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\n\r\nfunction Dialogs(props) {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messageElements = state.messages.map(m => <Message message={m.message} whoSays={m.whoSays} key={m.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       placeholder={'Enter your message'}\r\n\t\t\t\t\t   name=\"newMessageBody\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport Dialogs from \"./Dialogs\";\r\nimport {sendMessage} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage\r\n\t}\r\n}\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, {sendMessage}),\r\n\twithAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}