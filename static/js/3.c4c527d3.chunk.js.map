{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileData","goToEditMode","profile","isOwner","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","contactTitle","contactValue","Contact","className","s","contact","ProfileDataForm","reduxForm","form","handleSubmit","error","onSubmit","formSummaryError","createFeild","Input","type","Textarea","ProfileInfo","savePhoto","saveProfile","descriptionBlock","src","photos","large","userPhoto","mainPhoto","target","files","length","formdata","then","initialValues","Preloader","Post","item","logo","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","validate","required","placeholder","MyPosts","postsElements","posts","reverse","p","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","Profile","ProfileContainer","userId","this","match","params","autorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.c4c527d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1QqT0\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2czfl\",\"contact\":\"ProfileInfo_contact__WxYPO\",\"error\":\"ProfileInfo_error__1alCx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__WRVc2\",\"posts\":\"MyPosts_posts__3HAAV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1KdPU\"};","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\t\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\tlet [status, setStatus] = useState(props.status);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status);\r\n\t}, [props.status]);\r\n\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true);\r\n\t}\r\n\t\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false);\r\n\t\tprops.updateStatus(status);\r\n\t}\r\n\t\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetStatus(e.currentTarget.value);\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode&&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<b>Status: </b><span onDoubleClick = {activateEditMode}>{props.status||'!-------!'}</span>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{editMode &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input onChange={onStatusChange}\r\n\t\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\t\tonBlur={deactivateEditMode}\r\n\t\t\t\t\t\t\tvalue={status} \t\t\t\t\t\t\t\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nexport const ProfileData = ({goToEditMode, profile, isOwner}) => {\r\n\treturn <div>\r\n\t\t{isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n\r\n\t\t<div>\r\n\t\t\t<b>Full name</b>: {profile.fullName}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>Loking for a job</b>: {profile.lookingForAJob?'Yes':'No'}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>About me</b>: {profile.aboutMe}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>Contacts</b>:{Object.keys(profile.contacts).map(key => {\r\n\t\t\t\treturn <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n\t\t\t})}\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nconst Contact =({contactTitle, contactValue}) => {\r\n\treturn <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}","import React from 'react'\r\nimport {reduxForm} from 'redux-form'\r\nimport {Input, Textarea, createFeild} from \"../../common/FormsControls/FormsControls\"\r\nimport s from '../../common/FormsControls/FormsControls.module.css'\r\n\r\nconst ProfileForm = ({handleSubmit, error, profile}) => {\r\n\treturn <form onSubmit={handleSubmit}>\r\n\t\t<div><button>Save</button></div>\r\n\t\t\r\n\t\t{error && <div className={s.formSummaryError}>{error}</div>}\r\n\t\t\r\n\t\t<div>\r\n\t\t\t<b>Full name</b>: {createFeild('Full name', 'fullName', [], Input)}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>Loking for a job</b>: {createFeild('', 'lookingForAJob', [], 'input', {type: 'checkbox'})}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>My professional skills</b>: {createFeild('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>About me</b>: {createFeild('About me', 'aboutMe', [], Textarea)}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>Contacts</b>:\r\n\t\t\t\t{Object.keys(profile.contacts).map(key => {\r\n\t\t\t\t\treturn <div className={s.contact} key={key}><b>{key}</b>:{createFeild(key, 'contacts.' + key, [], Input)}</div>\r\n\t\t\t\t})}\r\n\t\t</div>\r\n\t</form>\r\n}\r\n\r\nexport const ProfileDataForm = reduxForm({form: 'edit-profile'})(ProfileForm);","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.jpg\";\r\nimport {ProfileData} from \"./ProfileData\";\r\nimport {ProfileDataForm} from \"./ProfileDataForm\";\r\n\r\n\r\nfunction ProfileInfo ({profile, status, updateStatus, savePhoto, isOwner, saveProfile}){\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\t\r\n\tif (!profile){\r\n\t\treturn <Preloader/>\r\n\t}\r\n\r\n\tconst onMainPhotoSelected = (e) => {\r\n\t\tif(e.target.files.length) {\r\n\t\t\tsavePhoto(e.target.files[0]);\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst onSubmit = (formdata) => {\r\n\t\tsaveProfile(formdata)\r\n\t\t\t.then(()=>{\r\n\t\t\t\tsetEditMode(false);\r\n\t\t\t\t})\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={s.descriptionBlock}>\r\n\t\t\t\t<img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n\t\t\t\t{isOwner && <div><input type={\"file\"} onChange={onMainPhotoSelected}/></div>}\r\n\t\t\t\t<ProfileStatusWithHooks status={status} updateStatus={updateStatus} /><br/>\r\n\t\t\t\t{editMode\r\n\t\t\t\t\t? <ProfileDataForm onSubmit={onSubmit} profile={profile} initialValues={profile} setEditMode={setEditMode}/>\r\n\t\t\t\t\t: <ProfileData isOwner = {isOwner} profile={profile} goToEditMode={() => {setEditMode(true)} }/>}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileInfo;","import s from './Post.module.css';\r\nimport logo from '../../../Navbar/Friend/ava.jpg'\r\n\r\nfunction Post(props) {\r\n    return <div className={s.item}>\r\n        <img src={logo}/>\r\n        {props.message}\r\n        <div>\r\n            <span>like</span> {props.likesCount}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {required, maxLengthCreator} from \"../../../utils/validators/validators\";\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='newPostText' component={Textarea} \r\n\t\t\t\tvalidate={[required, maxLength10]} \r\n\t\t\t\tplaceholder={'New post...'}/>\r\n            </div>\r\n\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'newpost'})(AddNewPostForm);\r\n\r\nfunction MyPosts(props) {\r\n\tlet reversProps = [...props.posts].reverse();\r\n    let postsElements = reversProps.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id}/>);\r\n\r\n    const onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport MyPosts from \"./MyPosts\";\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tposts: state.profilePage.posts\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nfunction Profile(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo savePhoto={props.savePhoto} \r\n\t\t\t\t\t\tisOwner = {props.isOwner}\r\n\t\t\t\t\t\tprofile={props.profile}\r\n\t\t\t\t\t\tstatus={props.status} \r\n\t\t\t\t\t\tupdateStatus={props.updateStatus}\r\n\t\t\t\t\t\tsaveProfile={props.saveProfile}/>\r\n\t\t\t<MyPostsContainer/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\"\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.autorizedUserId;\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.history.push('/login');\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getUserProfile(userId);\r\n\t\tthis.props.getStatus(userId);\r\n\t}\r\n\tcomponentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n\t\t\tthis.refreshProfile();\r\n\t\t}\t\r\n\t}\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n\t\t\t\t\t isOwner = {!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n                     saveProfile={this.props.saveProfile}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn{\t\r\n\t\tprofile: state.profilePage.profile,\r\n\t\tstatus: state.profilePage.status,\r\n\t\tautorizedUserId: state.auth.userId,\r\n\t\tisAuth: state.auth.isAuth\r\n\t}\r\n}\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}